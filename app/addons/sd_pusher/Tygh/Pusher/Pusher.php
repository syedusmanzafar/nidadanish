<?php
 namespace Tygh\Pusher; use Tygh\Registry; class Pusher { protected static $instance = null; protected static $channel = 'public'; protected static $channels = null; private static function instance() { if (self::$instance == null) { $addon_settings = Registry::get('addons.sd_pusher'); $options = array( 'cluster' => $addon_settings['cluster'], 'encrypted' => SD_PUSHER_ENCRYPTED ); self::$instance = new \Pusher( $addon_settings['key'], $addon_settings['secret'], $addon_settings['app_id'], $options ); } return self::$instance; } public static function auth($channel, $socket_id) { $pusher = self::instance(); return $pusher->socket_auth($channel, $socket_id); } public static function auth_presence($channel, $socket_id, $user_id, $presence_data) { $pusher = self::instance(); return $pusher->presence_auth($channel, $socket_id, $user_id, $presence_data); } public static function send($type, $event = 'notification', $user_id, $message = '', $channel = false, $company_id = 0) { $pusher = self::instance(); if (empty($channel) && !is_array($user_id)) { $channel = self::getChannelName($user_id); } $channel = self::filterChannels($channel); if (!empty($channel)) { $data['message'] = $message; return $pusher->trigger($channel, $event, $data); } return false; } public static function getChannels() { $pusher = self::instance(); if (self::$channels == null) { $response = $pusher->get( '/channels' ); if($response['status'] == 200 ) { $result = json_decode($response[ 'body' ], true ); self::$channels = $result['channels']; } else { return false; } } return self::$channels; } private static function getChannelName($user_id = false) { if (!empty($user_id)) { self::$channel = sprintf('%s_%s', SD_PUSHER_CHANNELS_PRIVATE, $user_id); } else { self::$channel = SD_PUSHER_CHANNELS_PUBLIC; } return self::$channel; } private static function filterChannels($old_channels) { $new_channels = array(); if (!empty($old_channels)) { $channels = self::getChannels(); if (is_array($old_channels)) { foreach ($old_channels as $channel) { if (isset($channels[$channel])) { $new_channels[] = $channel; } } } elseif (is_string($old_channels)) { if (isset($channels[$old_channels])) { $new_channels[] = $old_channels; } } } return $new_channels; } } 
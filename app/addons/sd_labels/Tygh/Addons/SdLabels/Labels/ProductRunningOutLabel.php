<?php
 declare(strict_types=1); namespace Tygh\Addons\SdLabels\Labels; use Tygh\Enum\LabelType; use Tygh\Tygh; class ProductRunningOutLabel extends Label { protected static $label_cache; public const ADDITIONAL_SETTINGS_DEFAULT_MIN_COUNT = 1; public const ADDITIONAL_SETTINGS_DEFAULT_MAX_COUNT = 5; public function getHint(): ?string { return __('sd_labels.hints.product_running_out'); } public static function isShowing(array $product): bool { if (self::$label_cache instanceof static) { $label = self::$label_cache; } else { $labels_repository = Tygh::$app['addons.sd_labels.label_repository']; $label = self::$label_cache = $labels_repository->getLabelCollection() ->getLabelByType(LabelType::PRODUCT_RUNNING_OUT); } if (empty($label)) { return false; } $min_count = $label->additional_settings->getSettingByCode('min_count'); $max_count = $label->additional_settings->getSettingByCode('max_count'); if (empty($min_count) || empty($max_count)) { return false; } $min_count = $min_count->value ?? $min_count->default_value ?? self::ADDITIONAL_SETTINGS_DEFAULT_MIN_COUNT; $max_count = $max_count->value ?? $max_count->default_value ?? self::ADDITIONAL_SETTINGS_DEFAULT_MAX_COUNT; $amount = !empty($product['min_qty']) ? floor($product['amount'] / $product['min_qty']) : $product['amount']; return (empty($product['avail_since']) || $product['avail_since'] < time()) && $product['out_of_stock_actions'] === 'N' && $amount >= $min_count && $amount <= $max_count; } } 
<?php
 declare(strict_types=1); namespace Tygh\Addons\SdLabels\Labels; use Tygh\Database\Connection; use Tygh\Enum\YesNo; class NewLabel extends Label { public function getHint(): ?string { return __('sd_labels.hints.new'); } public function cronAttachLabel(Connection $db, array $addon_settings): array { return [ 'attach_products' => $this->getNewProducts($db, $addon_settings), 'attach_langvar' => 'sd_labels.cron.label_new_assigned', 'attach_fail_langvar' => 'sd_labels.cron.no_new_label', ]; } public function cronRemoveLabel(Connection $db, array $addon_settings): array { $cronData = []; $cronData['remove_products'] = $this->getOldProducts($db, $addon_settings); $cronData['remove_langvar'] = 'sd_labels.cron.label_new_deleted'; return $cronData; } private function getNewProducts(Connection $db, array $addon_settings): array { $new_days = $addon_settings['cron_days_when_product_is_new']; $creation_date = new \DateTimeImmutable("-$new_days days"); $sql = 'SELECT ?:products.product_id FROM ?:products ' . 'LEFT JOIN ?:product_sd_labels ON ?:products.product_id = ?:product_sd_labels.product_id' . ' WHERE timestamp >= ?i AND ' . '(?:product_sd_labels.product_id IS NULL OR ?:product_sd_labels.label_id <> ?s)'; if (class_exists('\Tygh\Enum\Addons\VendorDebtPayout\ProductTypes')) { $sql .= db_quote( ' AND ?:products.product_type <> ?s', \Tygh\Enum\Addons\VendorDebtPayout\ProductTypes::DEBT_PAYOUT ); } return $db->getColumn( $sql, $creation_date->getTimestamp(), $this->getLabelId() ); } private function getOldProducts(Connection $db, array $addon_settings): array { $new_days = $addon_settings['cron_days_when_product_is_new']; $creation_date = strtotime("-$new_days day"); return $db->getColumn( 'SELECT pr.product_id FROM ?:products AS pr ' . 'LEFT JOIN ?:product_sd_labels as pl ON pr.product_id = pl.product_id' . ' WHERE pl.is_auto = ?s AND pl.label_id = ?s AND timestamp < ?i', YesNo::YES, $this->getLabelId(), $creation_date ); } } 
<?php
 use Tygh\Addons\SdLabels\LabelCollection; use Tygh\Addons\SdLabels\Labels\Label; use Tygh\Addons\SdLabels\Repositories\LabelRepository; use Tygh\Addons\SdLabels\Repositories\ProductLabelsRepository; use Tygh\Enum\YesNo; use Tygh\Registry; defined('BOOTSTRAP') or die('Access denied'); if (($_SERVER['REQUEST_METHOD'] === 'POST' && in_array($mode, ['delete', 'm_delete', 'position_update'])) || in_array($mode, ['manage', 'update']) ) { $label_repository = Tygh::$app['addons.sd_labels.label_repository']; $product_labels_repository = Tygh::$app['addons.sd_labels.product_labels']; } if ($_SERVER['REQUEST_METHOD'] === 'POST') { fn_trusted_vars('label_data'); $suffix = '.manage'; if ($mode === 'update') { if (!empty($_REQUEST['label_data'])) { $label_repository->updateLabel($_REQUEST['label_data']); fn_clear_cache('registry'); } } elseif ($mode === 'delete') { if (!empty($_REQUEST['label_id'])) { $product_labels_repository->removeLabel($_REQUEST['label_id']); $label_repository->deleteLabel($_REQUEST['label_id']); } } elseif ($mode === 'm_delete') { if (!empty($_REQUEST['label_ids'])) { foreach ($_REQUEST['label_ids'] as $label_id) { $product_labels_repository->removeLabel($label_id); $label_repository->deleteLabel($label_id); } } } elseif ($mode === 'position_update') { $label_repository->updatePositions($_REQUEST['positions']); fn_clear_cache('registry'); } return [CONTROLLER_STATUS_OK, 'sd_labels' . $suffix]; } if ($mode === 'manage') { $search['name'] = $_REQUEST['name'] ?? ''; $search['status'] = $_REQUEST['status'] ?? ''; $search['available_for_vendors'] = $_REQUEST['available_for_vendors'] ?? ''; Registry::set('navigation.tabs', [ 'text_labels' => [ 'title' => __('sd_labels.manage_labels.tab_text_labels'), 'href' => sprintf( 'sd_labels.manage?type=' . Label::TEXT . '&name=' . $search['name'] . '&status=' . $search['status'] . '&available_for_vendors=' . $search['available_for_vendors'] ), 'ajax' => true, 'ajax_onclick' => true, ], 'graphic_labels' => [ 'title' => __('sd_labels.manage_labels.tab_graphic_labels'), 'href' => sprintf( 'sd_labels.manage?type=' . Label::GRAPHIC . '&name=' . $search['name'] . '&status=' . $search['status'] . '&available_for_vendors=' . $search['available_for_vendors'] ), 'ajax' => true, 'ajax_onclick' => true, ] ]); if (defined('AJAX_REQUEST')) { $search['name'] = $_REQUEST['name'] ?? ''; $search['status'] = $_REQUEST['status'] ?? ''; $search['available_for_vendors'] = $_REQUEST['available_for_vendors'] ?? ''; $label_type = $_REQUEST['type'] ?? ''; if (!empty($label_type)) { $label_collection = $label_repository->getLabelCollection() ->getLabelByDisplayType($label_type) ->searchLabelByName($search['name']) ->searchLabelByStatus($search['status']); if (fn_allowed_for('MULTIVENDOR') && isset($search['available_for_vendors']) && $search['available_for_vendors'] === YesNo::YES ) { $label_collection = $label_collection->getVendorLabels(); } [$labels, $params] = $label_collection->paginate($_REQUEST, Registry::get('settings.Appearance.admin_elements_per_page')); $theme_labels = fn_sd_labels_get_theme_labels(); if ($label_type === Label::TEXT) { Tygh::$app['view']->assign([ 'labels_text' => $labels->toArray(), 'search' => $params, 'theme_labels' => array_keys($theme_labels) ]); Tygh::$app['view']->display('addons/sd_labels/views/sd_labels/text_labels.tpl'); } elseif ($label_type === Label::GRAPHIC) { Tygh::$app['view']->assign([ 'labels_graphic' => $labels->toArray(), 'search' => $params ]); Tygh::$app['view']->display('addons/sd_labels/views/sd_labels/graphic_labels.tpl'); } } } if (empty($params)) { Tygh::$app['view']->assign(compact('search')); } } elseif ($mode === 'update') { if (!empty($_REQUEST['label_id'])) { $label_data = $label_repository->getLabelCollection()->getLabelById($_REQUEST['label_id'])->toArray(); Tygh::$app['view']->assign(compact('label_data')); $navigation = [ 'general_' . $label_data['label_id'] => [ 'title' => __('general'), 'position' => 10, 'js' => true, ], ]; if (!empty($label_data['additional_settings'])) { $navigation['additional_settings_' . $label_data['label_id']] = [ 'title' => __('sd_labels.additional_settings.tab_name'), 'position' => 20, 'js' => true, ]; } Registry::set('navigation.tabs', $navigation); $theme_labels = fn_sd_labels_get_theme_labels(); Tygh::$app['view']->assign('theme_labels', array_keys($theme_labels)); } elseif (!empty($_REQUEST['type'])) { $label_data['display_type'] = $_REQUEST['type']; Tygh::$app['view']->assign('label_data', $label_data); } }